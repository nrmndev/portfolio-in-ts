import { Col, Container, Row } from "react-bootstrap";
// import NotFound from "../../components/notfound";
// import SkillsListItem from "./skills-list-item";
import { useNavigate } from "react-router-dom";
import CSSTransitionWrapper from "../../components/hooks/useCssTransition";
import useCheckInViewById from "../../components/hooks/useCheckInViewById";
import { AnimationTypes } from "../../components/hooks/useCssTransition";
import SVGIcon from "../../components/svg-icons/svg-icons";
type Props = {
  onClickHandler: (id: number, e: React.MouseEvent<HTMLButtonElement>) => void;
  onMouseEventHandler: (item: string, e: React.MouseEvent<HTMLElement>) => void;
  data: any;
};
const SkillsList = (props: Props) => {
  let navigate = useNavigate();
  /****** EVENT HANDLING ******/
  /* PASS ON TO PARENT HOC FOR LOGIC */
  // const onMouseEventHandler = (
  //   item: string,
  //   e: React.MouseEvent<HTMLElement>
  // ) => {
  //   props.onMouseEventHandler(item, e);
  // };

  // const onClickHandler = (
  //   item: number,
  //   e: React.MouseEvent<HTMLButtonElement>
  // ) => {
  //   props.onClickHandler(item, e);
  // };

  /****** COMPONENT RENDERING *****/
  // let SkillsJSX: JSX.Element[] | JSX.Element = (
  //   <NotFound text="No Skills List Found" />
  // );

  // if (props.data.length > 0) {
  //   SkillsJSX = props.data.map((item: any, index: number) => {
  //     return (
  //       <SkillsListItem
  //         itemID={item.id}
  //         key={index}
  //         image={item.image}
  //         title={item.title}
  //         description={item.description}
  //         message={item.message}
  //         svgIcon={item.svgIcon}
  //         onMouseEventHandler={onMouseEventHandler.bind(null, item.message)}
  //         onClickHandler={onClickHandler.bind(null, item.id)}
  //       />
  //     );
  //   });
  // }

  const onClickSetHistory = () => {
    navigate("/reactjs/usestate");
    // history.push('reactjs/usestate')
  };

  // const onClickGoStore = () => {
  //   navigate("/reactjs/usestate");
  //   // history.push('reactjs/usestate')
  // };
  const isSkillHeadingInView = useCheckInViewById("skill_heading");

  const isSkillIconsInView = useCheckInViewById("skill_icons");
  return (
    <section
      id="SkillsSection"
      className="container-fluid pt-5 pb-5 z-3 bg-1 before"
    >
      <Container id="skill_heading" style={{ minHeight: "20vh" }}>
        <Row className="mb-5 z-2 pt-5">
          <Col>
            <CSSTransitionWrapper
              in={isSkillHeadingInView}
              delay={200}
              animation={AnimationTypes.FLIPINX}
            >
              <h2 className="color_filled text__center text__uppercase font__h1">
                Front End Development
              </h2>
            </CSSTransitionWrapper>
            <CSSTransitionWrapper
              in={isSkillHeadingInView}
              delay={400}
              animation={AnimationTypes.FADEINUP}
            >
              <h4 className="color_filled text__center">
                My real world experiences below
              </h4>
            </CSSTransitionWrapper>
            <CSSTransitionWrapper
              in={isSkillHeadingInView}
              delay={600}
              animation={AnimationTypes.FADEINUP}
            >
              <p className="text-center color_1">
                You might find something useful here, best practices and some
                use case approaches.
              </p>
            </CSSTransitionWrapper>
          </Col>
        </Row>
      </Container>
      <Container className="pt-5" id="skill_icons">
        <Row>
          <Col sm={2} className="text-center">
            <CSSTransitionWrapper
              in={isSkillIconsInView}
              delay={200}
              animation={AnimationTypes.BOUNCE}
            >
              <SVGIcon icon="REACT" />
            </CSSTransitionWrapper>
            <h3 className="h4">ReactJS</h3>
          </Col>
          <Col sm={2} className="text-center">
            <CSSTransitionWrapper
              in={isSkillIconsInView}
              delay={400}
              animation={AnimationTypes.BOUNCE}
            >
              <SVGIcon icon="JS" />
            </CSSTransitionWrapper>
            <h3 className="h4">Modern JS</h3>
          </Col>
          <Col sm={2} className="text-center">
            <CSSTransitionWrapper
              in={isSkillIconsInView}
              delay={600}
              animation={AnimationTypes.BOUNCE}
            >
              <SVGIcon icon="TYPESCRIPT" />
            </CSSTransitionWrapper>
            <h3 className="h4">TypeScript</h3>
          </Col>
          <Col sm={2} className="text-center">
            <CSSTransitionWrapper
              in={isSkillIconsInView}
              delay={800}
              animation={AnimationTypes.BOUNCE}
            >
              <SVGIcon icon="REDUX" />
            </CSSTransitionWrapper>
            <h3 className="h4">Redux</h3>
          </Col>
          <Col sm={2} className="text-center">
            <CSSTransitionWrapper
              in={isSkillIconsInView}
              delay={1000}
              animation={AnimationTypes.BOUNCE}
            >
              <SVGIcon icon="HTML" />
            </CSSTransitionWrapper>
            <h3 className="h4">HTML5</h3>
          </Col>
          <Col sm={2} className="text-center">
            <CSSTransitionWrapper
              in={isSkillIconsInView}
              delay={1200}
              animation={AnimationTypes.BOUNCE}
            >
              <SVGIcon icon="CSS" />
            </CSSTransitionWrapper>
            <h3 className="h4">CSS</h3>
          </Col>
        </Row>
      </Container>
      <Container>
        <Row className="pt-5 pb-5">
          <Col md={6}>
            <a
              href="http://store.ngsilvestre.com"
              target="_blank"
              className="button button__rounded button__lg d-block h5"
              rel="noreferrer"
            >
              <span>See sample production store</span>
            </a>
          </Col>
          <Col md={6}>
            <button
              className="button button__rounded button__lg d-block h5"
              onClick={onClickSetHistory}
            >
              <span>View ReactJS Skills Processes</span>
            </button>
          </Col>
        </Row>
      </Container>
    </section>
  );
};

export default SkillsList;
