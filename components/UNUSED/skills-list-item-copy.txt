import { Col } from "react-bootstrap";
import type { RootState } from "../../store";
import { useAppSelector } from "../../store/hooks/typedhooks";
import { MouseEventType } from "../../utils/interfaces/interfaces";
type Props = {
  itemID: number;
  title: string;
  message: string;
  description: string;
  svgIcon: string;
  image?: string;
  children?: React.ReactNode;
  onClickHandler: (e: React.MouseEvent<HTMLButtonElement>) => void;
  onMouseEventHandler: (e: React.MouseEvent<HTMLElement>) => void;
};
const SkillsListItem = (props: Props) => {
  //const HTMLRender = lazy(() => import(`./svg-icons/${props.svgIcon}`));
  // const HTMLRender = lazy(() =>
  //   import(`./svg-icons/${props.svgIcon}`).then(({ HTMLRender }) => ({
  //     default: HTMLRender,
  //   }))
  // );

  const isActive = useAppSelector(
    (state: RootState) => state.ui.isMessageActive
  );
  const onMouseEventHandler = (
    e: React.MouseEvent<HTMLButtonElement | HTMLDivElement>
  ) => {
    props.onMouseEventHandler(e);
    switch (e.type) {
      case MouseEventType.MOUSE_ENTER:
        e.currentTarget?.parentElement?.parentElement?.classList.add(
          "elevated",
          "animated"
        );
        e.currentTarget?.parentElement?.parentElement?.parentElement?.parentElement?.classList.add(
          "active"
        );
        break;
      case MouseEventType.MOUSE_LEAVE:
        e.currentTarget?.parentElement?.parentElement?.classList.remove(
          "elevated",
          "animated"
        );
        e.currentTarget?.parentElement?.parentElement?.parentElement?.parentElement?.classList.remove(
          "active"
        );
        break;
      default:
        break;
    }
  };

  const onClickHandler = (e: React.MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    props.onClickHandler(e);
  };
  return (
    <Col sm={12} md={6} lg={4} className="mb-4 mb-md-5">
      <div className="card shadow__thin">
        <div className="text-center">
          {/* <Suspense fallback={<div>Page is Loading...</div>}>
            <HTMLRender />
          </Suspense> */}
          {/* <img
            src={`../assets/images/${props.image}`}
            alt=""
            width={65}
            height={65}
            className="theme-dark"
          /> */}
        </div>
        <div className="text-center">
          <h3 className="color_2">{props.title}</h3>
          <p className="color_1">{props.description}</p>
        </div>
        <button
          className="button button__bordered button__shadowed-light z-30"
          onMouseEnter={onMouseEventHandler}
          onMouseLeave={onMouseEventHandler}
          onClick={onClickHandler}
        >
          View Skill Process
        </button>
        <div
          className="overlay-mask overlay-mask__front"
          onMouseEnter={onMouseEventHandler}
          onMouseLeave={onMouseEventHandler}
        ></div>
      </div>
    </Col>
  );
};

export default SkillsListItem;
